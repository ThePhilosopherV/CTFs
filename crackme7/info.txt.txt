ntdll.dll:77024F8F db    0
ntdll.dll:77024F90 ; ---------------------------------------------------------------------------
ntdll.dll:77024F90 cmp     dword_770D69CC, 0
ntdll.dll:77024F97 jz      short loc_77024FA7
ntdll.dll:77024F99 mov     ecx, dword_770D69CC
ntdll.dll:77024F9F call    off_770D91E0
ntdll.dll:77024FA5 jmp     ecx
ntdll.dll:77024FA7 ; ---------------------------------------------------------------------------
ntdll.dll:77024FA7
ntdll.dll:77024FA7 loc_77024FA7:                           ; CODE XREF: ntdll.dll:77024F97↑j
ntdll.dll:77024FA7 mov     [esp+4], eax
ntdll.dll:77024FAB mov     [esp+8], ebx




Stack[00000BF8]:00E9F990
debug030:D105C940



sub_6C20F0 proc near                    ; CODE XREF: sub_6C2370↓p
sub_6C20F0
___________________________


if len(key) >= 14 
edx = key[8]

eax=key[7]
edx=key[8]-key[7]
ebx=key[10]
eax=key[9]
ebx=key[10]-key[9]
ecx=key[12]
eax=key[13]
ecx=key[12]-key[13]

eax=key[13]
ecx=key[14]
ecx=key[14]-key[13]

if (key[14]-key[13]==0) and (key[10]-key[9]) > 0 (key[12]-key[13]) > 0 

eax = (key[12]-key[13])
edx = (ord(key[8])-ord(key[7])) * (ord(key[12])-ord(key[13]))
ecx = (ord(key[14])-ord(key[13])) * (ord(key[14])-ord(key[13])) 
edx = (ord(key[8])-ord(key[7])) * (ord(key[12])-ord(key[13])) * (ord(key[10])-ord(key[9]))

eax =(ord(key[14])-ord(key[13])) * (ord(key[14])-ord(key[13]))  +   (ord(key[8])-ord(key[7])) * (ord(key[12])-ord(key[13])) * (ord(key[10])-ord(key[9])) * 4

def twos_complement(hexstr,bits):	
	value = int(hexstr,16)
	if value & (1 << (bits-1)):
		value -= 1 << bits
	return value

eax=(ord(key[12]) - ord(key[13]) ) 


edx = (ord(key[8]) - ord(key[7]) )

edx=  (ord(key[8]) - ord(key[7]) ) * (ord(key[12]) - ord(key[13]) ) 
____________
vladyogxjgkfsgg : working key
vlaexolsfftbfuu